name: Build Docker container and push to DigitalOcean Container Registry

on:
  workflow_call:
  workflow_dispatch:
#  push:
#    branches: [main]
#  pull_request:
#    branches: [main]

jobs:
  test-django-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    env:
      POSTGRES_DB: djangosaas
      POSTGRES_USER_NAME: postgres
      POSTGRES_PASSWORD: 1228
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      REDIS_HOST: 127.0.0.1
      REDIS_HOST_PORT: 6379
      REDIS_PASSWORD: 1228
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
      TENCENT_COS_SECRET_ID: ${{ secrets.TENCENT_COS_SECRET_ID }}
      TENCENT_COS_SECRET_KEY: ${{ secrets.TENCENT_COS_SECRET_KEY }}
      TENCENT_COS_REGION: ${{ secrets.TENCENT_COS_REGION }}


    services:
      postgres_main:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER_NAME: ${{ env.POSTGRES_USER_NAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s 
          --health-timeout 10s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test-django-job
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN  }}
    - name: Login to DO Container Registry with short-lived creds
      run: doctl registry login --expiry-seconds 1200
    - name: Build container image
      working-directory: .
      run: |
        docker build -f Dockerfile \
            -t registry.digitalocean.com/django-tracer/django-tracer:latest \
            -t registry.digitalocean.com/django-tracer/django-tracer:${GITHUB_SHA::7} \
            .
    - name: Push container image to DO Container Registry
      run: |
        docker push registry.digitalocean.com/django-tracer/django-tracer --all-tags
    - name: k8s cluster kubeconfig file short-lived creds
      run: |
        doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }}
    - name: Update deployment secrets
      run: |
          sudo cat << EOF >> /.env.prod
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          REDIS_USER_NAME=${{ secrets.REDIS_USER_NAME }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_HOST_PORT=${{ secrets.REDIS_HOST_PORT }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}  
          POSTGRES_DB= ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER_NAME=${{ secrets.POSTGRES_USER_NAME }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }}
          TENCENT_COS_SECRET_ID: ${{ secrets.TENCENT_COS_SECRET_ID }}
          TENCENT_COS_SECRET_KEY: ${{ secrets.TENCENT_COS_SECRET_KEY }}
          TENCENT_COS_REGION: ${{ secrets.TENCENT_COS_REGION }}
          EOF
          kubectl delete secret django-k8s-web-prod-env
          kubectl create secret generic django-k8s-web-prod-env --from-env-file=.env.prod

    - name: Update Deployment image
      run: | 
        kubectl set image deployment/django-k8s-web-deployment django-k8s-web=registry.digitalocean.com/django-tracer/django-tracer:${GITHUB_SHA::7}
    - name: Wait for rollout to finish
      run: |
        kubectl rollout status deployment/django-k8s-web-deployment
    - name: Migrate Database Command
      run: |
        export SINGLE_RUNNING_POD=$(kubectl get pods --selector app=django-k8s-web-deployment -o jsonpath='{.items[0].metadata.name}')
        kubectl exec -it $SINGLE_RUNNING_POD -- bash /app/migrate.sh
      
        
